|Top
clk => clk.IN4
rst => _.IN1
rst => _.IN1
col[0] <= Teclado:teclado.col
col[1] <= Teclado:teclado.col
col[2] <= Teclado:teclado.col
col[3] <= Teclado:teclado.col
fila[0] => fila[0].IN1
fila[1] => fila[1].IN1
fila[2] => fila[2].IN1
fila[3] => fila[3].IN1
VGA_Hsync_n <= test_VGA:VGA.VGA_Hsync_n
VGA_Vsync_n <= test_VGA:VGA.VGA_Vsync_n
VGA_R <= test_VGA:VGA.VGA_R
VGA_G <= test_VGA:VGA.VGA_G
VGA_B <= test_VGA:VGA.VGA_B
salidaPWM <= salidaPWM.DB_MAX_OUTPUT_PORT_TYPE


|Top|Teclado:teclado
clk => cfreq[0].CLK
clk => cfreq[1].CLK
clk => cfreq[2].CLK
clk => cfreq[3].CLK
clk => cfreq[4].CLK
clk => cfreq[5].CLK
clk => cfreq[6].CLK
clk => cfreq[7].CLK
clk => cfreq[8].CLK
clk => cfreq[9].CLK
clk => cfreq[10].CLK
clk => cfreq[11].CLK
clk => cfreq[12].CLK
clk => cfreq[13].CLK
clk => cfreq[14].CLK
clk => cfreq[15].CLK
clk => cfreq[16].CLK
clk => cfreq[17].CLK
clk => cfreq[18].CLK
clk => cfreq[19].CLK
clk => cfreq[20].CLK
clk => cfreq[21].CLK
clk => cfreq[22].CLK
clk => cfreq[23].CLK
clk => cfreq[24].CLK
clk => cfreq[25].CLK
clk => cfreq[26].CLK
fila[0] => Equal0.IN31
fila[0] => caso[0].DATAIN
fila[1] => Equal0.IN30
fila[1] => caso[1].DATAIN
fila[2] => Equal0.IN29
fila[2] => caso[2].DATAIN
fila[3] => Equal0.IN28
fila[3] => caso[3].DATAIN
col[0] <= col[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[1] <= col[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[2] <= col[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[3] <= col[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
posicion[0] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
posicion[1] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
posicion[2] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
posicion[3] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
opr <= opr.DB_MAX_OUTPUT_PORT_TYPE


|Top|BancoRegistro:banco
addrR[0] => Mux0.IN3
addrR[0] => Mux1.IN3
addrR[0] => Mux2.IN3
addrR[1] => Mux0.IN2
addrR[1] => Mux1.IN2
addrR[1] => Mux2.IN2
addrR[2] => Mux0.IN1
addrR[2] => Mux1.IN1
addrR[2] => Mux2.IN1
addrR[3] => Mux0.IN0
addrR[3] => Mux1.IN0
addrR[3] => Mux2.IN0
addrW[0] => Mux3.IN3
addrW[0] => Mux4.IN3
addrW[0] => Mux5.IN3
addrW[0] => Decoder0.IN3
addrW[1] => Mux3.IN2
addrW[1] => Mux4.IN2
addrW[1] => Mux5.IN2
addrW[1] => Decoder0.IN2
addrW[2] => Mux3.IN1
addrW[2] => Mux4.IN1
addrW[2] => Mux5.IN1
addrW[2] => Decoder0.IN1
addrW[3] => Mux3.IN0
addrW[3] => Mux4.IN0
addrW[3] => Mux5.IN0
addrW[3] => Decoder0.IN0
RegWrite => breg[0][0].CLK
RegWrite => breg[0][1].CLK
RegWrite => breg[0][2].CLK
RegWrite => breg[1][0].CLK
RegWrite => breg[1][1].CLK
RegWrite => breg[1][2].CLK
RegWrite => breg[2][0].CLK
RegWrite => breg[2][1].CLK
RegWrite => breg[2][2].CLK
RegWrite => breg[3][0].CLK
RegWrite => breg[3][1].CLK
RegWrite => breg[3][2].CLK
RegWrite => breg[4][0].CLK
RegWrite => breg[4][1].CLK
RegWrite => breg[4][2].CLK
RegWrite => breg[5][0].CLK
RegWrite => breg[5][1].CLK
RegWrite => breg[5][2].CLK
RegWrite => breg[6][0].CLK
RegWrite => breg[6][1].CLK
RegWrite => breg[6][2].CLK
RegWrite => breg[7][0].CLK
RegWrite => breg[7][1].CLK
RegWrite => breg[7][2].CLK
RegWrite => breg[8][0].CLK
RegWrite => breg[8][1].CLK
RegWrite => breg[8][2].CLK
RegWrite => breg[9][0].CLK
RegWrite => breg[9][1].CLK
RegWrite => breg[9][2].CLK
RegWrite => breg[10][0].CLK
RegWrite => breg[10][1].CLK
RegWrite => breg[10][2].CLK
RegWrite => breg[11][0].CLK
RegWrite => breg[11][1].CLK
RegWrite => breg[11][2].CLK
RegWrite => breg[12][0].CLK
RegWrite => breg[12][1].CLK
RegWrite => breg[12][2].CLK
RegWrite => breg[13][0].CLK
RegWrite => breg[13][1].CLK
RegWrite => breg[13][2].CLK
RegWrite => breg[14][0].CLK
RegWrite => breg[14][1].CLK
RegWrite => breg[14][2].CLK
RegWrite => breg[15][0].CLK
RegWrite => breg[15][1].CLK
RegWrite => breg[15][2].CLK
clk => ~NO_FANOUT~
rst => breg[0][0].ACLR
rst => breg[0][1].ACLR
rst => breg[0][2].ACLR
rst => breg[1][0].ACLR
rst => breg[1][1].ACLR
rst => breg[1][2].ACLR
rst => breg[2][0].ACLR
rst => breg[2][1].ACLR
rst => breg[2][2].ACLR
rst => breg[3][0].ACLR
rst => breg[3][1].ACLR
rst => breg[3][2].ACLR
rst => breg[4][0].ACLR
rst => breg[4][1].ACLR
rst => breg[4][2].ACLR
rst => breg[5][0].ACLR
rst => breg[5][1].ACLR
rst => breg[5][2].ACLR
rst => breg[6][0].ACLR
rst => breg[6][1].ACLR
rst => breg[6][2].ACLR
rst => breg[7][0].ACLR
rst => breg[7][1].ACLR
rst => breg[7][2].ACLR
rst => breg[8][0].ACLR
rst => breg[8][1].ACLR
rst => breg[8][2].ACLR
rst => breg[9][0].ACLR
rst => breg[9][1].ACLR
rst => breg[9][2].ACLR
rst => breg[10][0].ACLR
rst => breg[10][1].ACLR
rst => breg[10][2].ACLR
rst => breg[11][0].ACLR
rst => breg[11][1].ACLR
rst => breg[11][2].ACLR
rst => breg[12][0].ACLR
rst => breg[12][1].ACLR
rst => breg[12][2].ACLR
rst => breg[13][0].ACLR
rst => breg[13][1].ACLR
rst => breg[13][2].ACLR
rst => breg[14][0].ACLR
rst => breg[14][1].ACLR
rst => breg[14][2].ACLR
rst => breg[15][0].ACLR
rst => breg[15][1].ACLR
rst => breg[15][2].ACLR
datOutR[0] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
datOutR[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
datOutR[2] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Top|test_VGA:VGA
clk => clk.IN1
rst => rst.IN1
posicion[0] <= posicion[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
posicion[1] <= posicion[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
posicion[2] <= posicion[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
posicion[3] <= posicion[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[0] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[1] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
dirColor[2] => DP_RAM_addr_out.DATAB
VGA_Hsync_n <= VGA_Driver640x480:VGA640x480.Hsync_n
VGA_Vsync_n <= VGA_Driver640x480:VGA640x480.Vsync_n
VGA_R <= VGA_Driver640x480:VGA640x480.pixelOut
VGA_G <= VGA_Driver640x480:VGA640x480.pixelOut
VGA_B <= VGA_Driver640x480:VGA640x480.pixelOut


|Top|test_VGA:VGA|buffer_ram_dp:DP_RAM
clk_w => ram.we_a.CLK
clk_w => ram.waddr_a[3].CLK
clk_w => ram.waddr_a[2].CLK
clk_w => ram.waddr_a[1].CLK
clk_w => ram.waddr_a[0].CLK
clk_w => ram.data_a[2].CLK
clk_w => ram.data_a[1].CLK
clk_w => ram.data_a[0].CLK
clk_w => ram.CLK0
addr_in[0] => ram.waddr_a[0].DATAIN
addr_in[0] => ram.WADDR
addr_in[1] => ram.waddr_a[1].DATAIN
addr_in[1] => ram.WADDR1
addr_in[2] => ram.waddr_a[2].DATAIN
addr_in[2] => ram.WADDR2
addr_in[3] => ram.waddr_a[3].DATAIN
addr_in[3] => ram.WADDR3
data_in[0] => ram.data_a[0].DATAIN
data_in[0] => ram.DATAIN
data_in[1] => ram.data_a[1].DATAIN
data_in[1] => ram.DATAIN1
data_in[2] => ram.data_a[2].DATAIN
data_in[2] => ram.DATAIN2
regwrite => ram.we_a.DATAIN
regwrite => ram.WE
clk_r => data_out[0]~reg0.CLK
clk_r => data_out[1]~reg0.CLK
clk_r => data_out[2]~reg0.CLK
addr_out[0] => ram.RADDR
addr_out[1] => ram.RADDR1
addr_out[2] => ram.RADDR2
addr_out[3] => ram.RADDR3
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => ~NO_FANOUT~


|Top|test_VGA:VGA|VGA_Driver640x480:VGA640x480
rst => countX.OUTPUTSELECT
rst => countX.OUTPUTSELECT
rst => countX.OUTPUTSELECT
rst => countX.OUTPUTSELECT
rst => countX.OUTPUTSELECT
rst => countX.OUTPUTSELECT
rst => countX.OUTPUTSELECT
rst => countX.OUTPUTSELECT
rst => countX.OUTPUTSELECT
rst => countX.OUTPUTSELECT
rst => countY.OUTPUTSELECT
rst => countY.OUTPUTSELECT
rst => countY.OUTPUTSELECT
rst => countY.OUTPUTSELECT
rst => countY.OUTPUTSELECT
rst => countY.OUTPUTSELECT
rst => countY.OUTPUTSELECT
rst => countY.OUTPUTSELECT
rst => countY.OUTPUTSELECT
clk => countY[0].CLK
clk => countY[1].CLK
clk => countY[2].CLK
clk => countY[3].CLK
clk => countY[4].CLK
clk => countY[5].CLK
clk => countY[6].CLK
clk => countY[7].CLK
clk => countY[8].CLK
clk => countX[0].CLK
clk => countX[1].CLK
clk => countX[2].CLK
clk => countX[3].CLK
clk => countX[4].CLK
clk => countX[5].CLK
clk => countX[6].CLK
clk => countX[7].CLK
clk => countX[8].CLK
clk => countX[9].CLK
pixelIn[0] => pixelOut.DATAB
pixelIn[1] => pixelOut.DATAB
pixelIn[2] => pixelOut.DATAB
pixelIn[3] => pixelOut.DATAB
pixelIn[4] => pixelOut.DATAB
pixelIn[5] => pixelOut.DATAB
pixelIn[6] => pixelOut.DATAB
pixelIn[7] => pixelOut.DATAB
pixelIn[8] => pixelOut.DATAB
pixelOut[0] <= pixelOut.DB_MAX_OUTPUT_PORT_TYPE
pixelOut[1] <= pixelOut.DB_MAX_OUTPUT_PORT_TYPE
pixelOut[2] <= pixelOut.DB_MAX_OUTPUT_PORT_TYPE
pixelOut[3] <= pixelOut.DB_MAX_OUTPUT_PORT_TYPE
pixelOut[4] <= pixelOut.DB_MAX_OUTPUT_PORT_TYPE
pixelOut[5] <= pixelOut.DB_MAX_OUTPUT_PORT_TYPE
pixelOut[6] <= pixelOut.DB_MAX_OUTPUT_PORT_TYPE
pixelOut[7] <= pixelOut.DB_MAX_OUTPUT_PORT_TYPE
pixelOut[8] <= pixelOut.DB_MAX_OUTPUT_PORT_TYPE
Hsync_n <= Hsync_n.DB_MAX_OUTPUT_PORT_TYPE
Vsync_n <= Vsync_n.DB_MAX_OUTPUT_PORT_TYPE
posX[0] <= countX[0].DB_MAX_OUTPUT_PORT_TYPE
posX[1] <= countX[1].DB_MAX_OUTPUT_PORT_TYPE
posX[2] <= countX[2].DB_MAX_OUTPUT_PORT_TYPE
posX[3] <= countX[3].DB_MAX_OUTPUT_PORT_TYPE
posX[4] <= countX[4].DB_MAX_OUTPUT_PORT_TYPE
posX[5] <= countX[5].DB_MAX_OUTPUT_PORT_TYPE
posX[6] <= countX[6].DB_MAX_OUTPUT_PORT_TYPE
posX[7] <= countX[7].DB_MAX_OUTPUT_PORT_TYPE
posX[8] <= countX[8].DB_MAX_OUTPUT_PORT_TYPE
posX[9] <= countX[9].DB_MAX_OUTPUT_PORT_TYPE
posY[0] <= countY[0].DB_MAX_OUTPUT_PORT_TYPE
posY[1] <= countY[1].DB_MAX_OUTPUT_PORT_TYPE
posY[2] <= countY[2].DB_MAX_OUTPUT_PORT_TYPE
posY[3] <= countY[3].DB_MAX_OUTPUT_PORT_TYPE
posY[4] <= countY[4].DB_MAX_OUTPUT_PORT_TYPE
posY[5] <= countY[5].DB_MAX_OUTPUT_PORT_TYPE
posY[6] <= countY[6].DB_MAX_OUTPUT_PORT_TYPE
posY[7] <= countY[7].DB_MAX_OUTPUT_PORT_TYPE
posY[8] <= countY[8].DB_MAX_OUTPUT_PORT_TYPE


|Top|pwm_basico:pwm
clk => caso[0].CLK
clk => caso[1].CLK
clk => caso[2].CLK
clk => caso[3].CLK
clk => caso[4].CLK
clk => caso[5].CLK
clk => n[0].CLK
clk => n[1].CLK
clk => n[2].CLK
clk => n[3].CLK
clk => n[4].CLK
clk => n[5].CLK
clk => n[6].CLK
clk => n[7].CLK
clk => n[8].CLK
clk => n[9].CLK
clk => n[10].CLK
clk => n[11].CLK
clk => n[12].CLK
clk => Q_reg[0].CLK
clk => Q_reg[1].CLK
clk => Q_reg[2].CLK
clk => Q_reg[3].CLK
clk => Q_reg[4].CLK
clk => Q_reg[5].CLK
pwm_out <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE
posT[0] => Decoder0.IN2
posT[0] => Decoder1.IN3
posT[0] => Decoder2.IN2
posT[1] => Decoder0.IN1
posT[1] => Decoder1.IN2
posT[1] => Decoder2.IN1
posT[2] => Decoder1.IN1
posT[2] => Decoder2.IN0
posT[3] => Decoder0.IN0
posT[3] => Decoder1.IN0


